{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa686fe23f5005fc414c7f5a0cb982347fa26177f975ade29836de9d898361061",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "959168",
    "logsBloom": "0x
    "blockHash": "0x060508d58f5a89aaa48dc861ad63f37c11015ecafd6c70c7f4d73c4c62c32d16",
    "transactionHash": "0xa686fe23f5005fc414c7f5a0cb982347fa26177f975ade29836de9d898361061",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "959168",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "c5192086b0bd5582ce75490f2f4db754",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface priceFeed ;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    \\n    constructor(address priceFeedAddress) {\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Goerli Network.\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        return priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        \\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return priceFeed ;\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n}\\n\",\"keccak256\":\"0x7e5a8b9337a55342d3bd4893cdeccda58a77a42964efb701dd915f65659dd591\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0x4e7e0d1ed754aae89ed8ab108cfc0f331f0c9f0e2592129e81cc536341c24059\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620010fa380380620010fa833981810160405281019062000037919062000129565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b610f8f806200016b6000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610318565b6040516100ba9190610850565b60405180910390f35b3480156100cf57600080fd5b506100d86103be565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108ce565b610601565b60405161010e9190610850565b60405180910390f35b34801561012357600080fd5b5061012c610619565b6040516101399190610850565b60405180910390f35b34801561014e57600080fd5b50610157610626565b604051610164919061095a565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064f565b6040516101999190610984565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109cb565b610675565b6040516101d69190610984565b60405180910390f35b6802b5e3af16b188000061021c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b490919063ffffffff16565b101561025d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025490610a55565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ac9190610aa4565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038157600080fd5b505afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610b0f565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104f15760006002828154811061046b5761046a610b3c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e990610b6b565b915050610448565b50600067ffffffffffffffff81111561050d5761050c610bb4565b5b60405190808252806020026020018201604052801561053b5781602001602082028036833780820191505090505b5060029080519060200190610551929190610790565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057890610c14565b60006040518083038185875af1925050503d80600081146105b5576040519150601f19603f3d011682016040523d82523d6000602084013e6105ba565b606091505b50509050806105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610c75565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061068557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106c0836106f0565b90506000670de0b6b3a764000085836106d99190610c95565b6106e39190610d1e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107719190610dc7565b5050509150506402540be400816107889190610e42565b915050919050565b828054828255906000526020600020908101928215610809579160200282015b828111156108085782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107b0565b5b509050610816919061081a565b5090565b5b8082111561083357600081600090555060010161081b565b5090565b6000819050919050565b61084a81610837565b82525050565b60006020820190506108656000830184610841565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089b82610870565b9050919050565b6108ab81610890565b81146108b657600080fd5b50565b6000813590506108c8816108a2565b92915050565b6000602082840312156108e4576108e361086b565b5b60006108f2848285016108b9565b91505092915050565b6000819050919050565b600061092061091b61091684610870565b6108fb565b610870565b9050919050565b600061093282610905565b9050919050565b600061094482610927565b9050919050565b61095481610939565b82525050565b600060208201905061096f600083018461094b565b92915050565b61097e81610890565b82525050565b60006020820190506109996000830184610975565b92915050565b6109a881610837565b81146109b357600080fd5b50565b6000813590506109c58161099f565b92915050565b6000602082840312156109e1576109e061086b565b5b60006109ef848285016109b6565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a3f601b836109f8565b9150610a4a82610a09565b602082019050919050565b60006020820190508181036000830152610a6e81610a32565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aaf82610837565b9150610aba83610837565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aef57610aee610a75565b5b828201905092915050565b600081519050610b098161099f565b92915050565b600060208284031215610b2557610b2461086b565b5b6000610b3384828501610afa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b7682610837565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ba957610ba8610a75565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bfe600083610be3565b9150610c0982610bee565b600082019050919050565b6000610c1f82610bf1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c5f600b836109f8565b9150610c6a82610c29565b602082019050919050565b60006020820190508181036000830152610c8e81610c52565b9050919050565b6000610ca082610837565b9150610cab83610837565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce457610ce3610a75565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2982610837565b9150610d3483610837565b925082610d4457610d43610cef565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6e81610d4f565b8114610d7957600080fd5b50565b600081519050610d8b81610d65565b92915050565b6000819050919050565b610da481610d91565b8114610daf57600080fd5b50565b600081519050610dc181610d9b565b92915050565b600080600080600060a08688031215610de357610de261086b565b5b6000610df188828901610d7c565b9550506020610e0288828901610db2565b9450506040610e1388828901610afa565b9350506060610e2488828901610afa565b9250506080610e3588828901610d7c565b9150509295509295909350565b6000610e4d82610d91565b9150610e5883610d91565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9757610e96610a75565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ed457610ed3610a75565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1157610f10610a75565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4e57610f4d610a75565b5b82820290509291505056fea2646970667358221220a92d4405bb80b194d69a45b472e26cfaa27f730c4484858d59300819abeab03b64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630d8e6e2c146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610318565b6040516100ba9190610850565b60405180910390f35b3480156100cf57600080fd5b506100d86103be565b005b3480156100e657600080fd5b5061010160048036038101906100fc91906108ce565b610601565b60405161010e9190610850565b60405180910390f35b34801561012357600080fd5b5061012c610619565b6040516101399190610850565b60405180910390f35b34801561014e57600080fd5b50610157610626565b604051610164919061095a565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c61064f565b6040516101999190610984565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109cb565b610675565b6040516101d69190610984565b60405180910390f35b6802b5e3af16b188000061021c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346106b490919063ffffffff16565b101561025d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025490610a55565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ac9190610aa4565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561038157600080fd5b505afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610b0f565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6002805490508110156104f15760006002828154811061046b5761046a610b3c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104e990610b6b565b915050610448565b50600067ffffffffffffffff81111561050d5761050c610bb4565b5b60405190808252806020026020018201604052801561053b5781602001602082028036833780820191505090505b5060029080519060200190610551929190610790565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161057890610c14565b60006040518083038185875af1925050503d80600081146105b5576040519150601f19603f3d011682016040523d82523d6000602084013e6105ba565b606091505b50509050806105fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f590610c75565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061068557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106c0836106f0565b90506000670de0b6b3a764000085836106d99190610c95565b6106e39190610d1e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107719190610dc7565b5050509150506402540be400816107889190610e42565b915050919050565b828054828255906000526020600020908101928215610809579160200282015b828111156108085782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906107b0565b5b509050610816919061081a565b5090565b5b8082111561083357600081600090555060010161081b565b5090565b6000819050919050565b61084a81610837565b82525050565b60006020820190506108656000830184610841565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089b82610870565b9050919050565b6108ab81610890565b81146108b657600080fd5b50565b6000813590506108c8816108a2565b92915050565b6000602082840312156108e4576108e361086b565b5b60006108f2848285016108b9565b91505092915050565b6000819050919050565b600061092061091b61091684610870565b6108fb565b610870565b9050919050565b600061093282610905565b9050919050565b600061094482610927565b9050919050565b61095481610939565b82525050565b600060208201905061096f600083018461094b565b92915050565b61097e81610890565b82525050565b60006020820190506109996000830184610975565b92915050565b6109a881610837565b81146109b357600080fd5b50565b6000813590506109c58161099f565b92915050565b6000602082840312156109e1576109e061086b565b5b60006109ef848285016109b6565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a3f601b836109f8565b9150610a4a82610a09565b602082019050919050565b60006020820190508181036000830152610a6e81610a32565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aaf82610837565b9150610aba83610837565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610aef57610aee610a75565b5b828201905092915050565b600081519050610b098161099f565b92915050565b600060208284031215610b2557610b2461086b565b5b6000610b3384828501610afa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b7682610837565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ba957610ba8610a75565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bfe600083610be3565b9150610c0982610bee565b600082019050919050565b6000610c1f82610bf1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c5f600b836109f8565b9150610c6a82610c29565b602082019050919050565b60006020820190508181036000830152610c8e81610c52565b9050919050565b6000610ca082610837565b9150610cab83610837565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce457610ce3610a75565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d2982610837565b9150610d3483610837565b925082610d4457610d43610cef565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d6e81610d4f565b8114610d7957600080fd5b50565b600081519050610d8b81610d65565b92915050565b6000819050919050565b610da481610d91565b8114610daf57600080fd5b50565b600081519050610dc181610d9b565b92915050565b600080600080600060a08688031215610de357610de261086b565b5b6000610df188828901610d7c565b9550506020610e0288828901610db2565b9450506040610e1388828901610afa565b9350506060610e2488828901610afa565b9250506080610e3588828901610d7c565b9150509295509295909350565b6000610e4d82610d91565b9150610e5883610d91565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e9757610e96610a75565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ed457610ed3610a75565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610f1157610f10610a75565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f4e57610f4d610a75565b5b82820290509291505056fea2646970667358221220a92d4405bb80b194d69a45b472e26cfaa27f730c4484858d59300819abeab03b64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}